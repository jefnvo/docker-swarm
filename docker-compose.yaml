version: "3.3"

services:

  proxy:
    image: nginx:1.13.6
    configs:
      - source: proxy
        target: /etc/nginx/nginx.conf 
    ports:
      - 8000:8000
    networks:
      - front
    deploy:
      restart_policy:
        condition: on-failure

  redis:

    image: redis:alpine

    ports:
      - "6379"
    networks:
      - frontend

  db:
    image: postgres:9.4
    container_name: db
    hostname: db
    volumes:
      - "db-data:/var/lib/postgresql/data"
    networks:
      - backend
    environment:
      - "constraint:node==worker"

  vote:

    image: dockersamples/examplevotingapp_vote:before
    container_name: docker-vote
    hostname: docker-vote
    ports:
      - 5000:80
    depends_on:
      - redis
    networks:
      - frontend

 

  # Web UI to count voting results

  result:

    image: dockersamples/examplevotingapp_result:before
    hostname: docker-result
    ports:

      - 5001:80

    depends_on:

      - db
    networks:
      - backend

 

  # Worker service to read from message queue

  worker:

    image: dockersamples/examplevotingapp_worker
    networks:
      - backend
      - frontend

configs:
  proxy:
    external: true

volumes:
  db-data:
    
networks:
  frontend:
  backend:
